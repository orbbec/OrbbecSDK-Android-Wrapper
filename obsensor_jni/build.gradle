import java.text.SimpleDateFormat

plugins {
    id 'com.android.library'
}

def libVersionCode = 2025041301
def libVersionName = "2.0.4"
println("libVersionCode: ${libVersionCode}, libVersionName: ${libVersionName}")

android {
    namespace 'com.orbbec.obsensor'
    compileSdk 33

    buildFeatures {
        buildConfig = true
    }

    defaultConfig {
        minSdk 24
        // todo 设定29无法弹出授权框问题，兼容最低19处理, 正式包删除DeviceDebugProperty.java
        //noinspection ExpiredTargetSdkVersion
        targetSdk 27

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        externalNativeBuild {
            cmake {
                arguments "-DOBSENSOR_JNI_DIR=${getProjectDir().absolutePath}",
                        "-DANDROID_STL=c++_shared",
                        "-DANDROID_ARM_NEON=TRUE"
                cppFlags "-std=c++11", "-fopenmp"
                abiFilters "arm64-v8a", "armeabi-v7a"
            }
        }

        // Gradle4.1.0版本以后已经将VERSION_CODE和VERSION_NAME从BuildConfig中去除，需要
        // 通过buildConfigField配置，详情可参考谷歌官方文档
        // https://developer.android.google.cn/studio/releases/gradle-plugin#4.2-bundled-jdk-11
        buildConfigField("int", "VERSION_CODE", "${libVersionCode}")
        buildConfigField("String", "VERSION_NAME", "\"${libVersionName}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android.libraryVariants.all { variant ->
        variant.outputs.all { output ->
            def fileName
            if (getOutputFileName() != null && getOutputFileName().endsWith('.aar')) {
                if (variant.buildType.name == 'release') {
                    fileName = "obsensor_v${libVersionName}_${libVersionCode}_release.aar"
                } else if (variant.buildType.name == 'debug') {
                    fileName = "obsensor_v${libVersionName}_${libVersionCode}_debug.aar"
                }
                setOutputFileName(fileName)
            }
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.18.1"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    ndkVersion "${ob_ndk_version}"

    lintOptions {
        abortOnError false
    }
}